// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using News.Data;

namespace News.Migrations
{
    [DbContext(typeof(NewsDb))]
    [Migration("20200715161600_confInicial")]
    partial class confInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("News.Models.Imagens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Legenda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("News.Models.NI", b =>
                {
                    b.Property<string>("ImagensidFK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoticiasidFK")
                        .HasColumnType("int");

                    b.ToTable("NI");
                });

            modelBuilder.Entity("News.Models.NT", b =>
                {
                    b.Property<int>("NoticiasidFK")
                        .HasColumnType("int");

                    b.Property<string>("TopicosFK")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("NT");
                });

            modelBuilder.Entity("News.Models.Noticias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Corpo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data_De_Publicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Resumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UtilizadoresidFK")
                        .HasColumnType("int");

                    b.Property<bool>("Visivel")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadoresidFK");

                    b.ToTable("Noticias");
                });

            modelBuilder.Entity("News.Models.Topicos", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Topicos");
                });

            modelBuilder.Entity("News.Models.Utilizadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("News.Models.Noticias", b =>
                {
                    b.HasOne("News.Models.Utilizadores", "Utilizadoresid")
                        .WithMany()
                        .HasForeignKey("UtilizadoresidFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
